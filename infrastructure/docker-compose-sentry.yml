services:
  redis-sentry:
    image: redis:alpine
    container_name: es-redis-sentry
    profiles: ["sentry"]
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis-sentry-data:/data
    networks:
      - es-network

  postgres-sentry:
    image: postgres:9.6-alpine
    container_name: es-postgres-sentry
    profiles: ["sentry"]
    command: postgres -c 'max_connections=200'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SENTRY_DB_USER} -d ${SENTRY_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      POSTGRES_USER: ${SENTRY_DB_USER}
      POSTGRES_PASSWORD: ${SENTRY_DB_PASSWORD}
      POSTGRES_DB: ${SENTRY_DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres-sentry-data:/var/lib/postgresql/data
    networks:
      - es-network

  sentry-init:
    image: sentry:${SENTRY_VERSION}
    container_name: es-sentry-init
    platform: linux/amd64
    profiles: ["sentry"]
    depends_on:
      redis-sentry:
        condition: service_healthy
      postgres-sentry:
        condition: service_healthy
    command: >
      bash -c "sentry upgrade --noinput &&
      sentry createuser --email ${SENTRY_ADMIN_EMAIL} --password ${SENTRY_ADMIN_PASSWORD} --superuser --no-input || true"
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: ${SENTRY_POSTGRES_HOST}
      SENTRY_POSTGRES_PORT: ${SENTRY_POSTGRES_PORT}
      SENTRY_DB_USER: ${SENTRY_DB_USER}
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD}
      SENTRY_DB_NAME: ${SENTRY_DB_NAME}
      SENTRY_REDIS_HOST: ${SENTRY_REDIS_HOST}
      SENTRY_REDIS_PORT: ${SENTRY_REDIS_PORT}
      SENTRY_MAIL_HOST: ${SENTRY_MAIL_HOST}
      SENTRY_SINGLE_ORGANIZATION: ${SENTRY_SINGLE_ORGANIZATION}
      SENTRY_FEATURES: ${SENTRY_FEATURES}
    networks:
      - es-network

  sentry:
    image: sentry:${SENTRY_VERSION}
    container_name: es-sentry-web
    platform: linux/amd64
    profiles: ["sentry"]
    depends_on:
      redis-sentry:
        condition: service_healthy
      postgres-sentry:
        condition: service_healthy
      sentry-init:
        condition: service_completed_successfully
    ports:
      - "${SENTRY_PORT}:9000"
    volumes:
      - './sentry-data:/var/lib/sentry/files'
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: ${SENTRY_POSTGRES_HOST}
      SENTRY_POSTGRES_PORT: ${SENTRY_POSTGRES_PORT}
      SENTRY_DB_USER: ${SENTRY_DB_USER}
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD}
      SENTRY_DB_NAME: ${SENTRY_DB_NAME}
      SENTRY_REDIS_HOST: ${SENTRY_REDIS_HOST}
      SENTRY_REDIS_PORT: ${SENTRY_REDIS_PORT}
      SENTRY_MAIL_HOST: ${SENTRY_MAIL_HOST}
      SENTRY_SINGLE_ORGANIZATION: ${SENTRY_SINGLE_ORGANIZATION}
      SENTRY_FEATURES: ${SENTRY_FEATURES}
    networks:
      - es-network

  sentry-cron:
    image: sentry:${SENTRY_VERSION}
    container_name: es-sentry-cron
    platform: linux/amd64
    profiles: ["sentry"]
    depends_on:
      - sentry
    command: "sentry run cron"
    volumes:
      - './sentry-data:/var/lib/sentry/files'
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: ${SENTRY_POSTGRES_HOST}
      SENTRY_POSTGRES_PORT: ${SENTRY_POSTGRES_PORT}
      SENTRY_DB_USER: ${SENTRY_DB_USER}
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD}
      SENTRY_DB_NAME: ${SENTRY_DB_NAME}
      SENTRY_REDIS_HOST: ${SENTRY_REDIS_HOST}
      SENTRY_REDIS_PORT: ${SENTRY_REDIS_PORT}
      SENTRY_MAIL_HOST: ${SENTRY_MAIL_HOST}
      SENTRY_SINGLE_ORGANIZATION: ${SENTRY_SINGLE_ORGANIZATION}
      SENTRY_FEATURES: ${SENTRY_FEATURES}
    networks:
      - es-network

  sentry-worker:
    image: sentry:${SENTRY_VERSION}
    container_name: es-sentry-worker
    platform: linux/amd64
    profiles: ["sentry"]
    depends_on:
      - sentry
    command: "sentry run worker"
    volumes:
      - './sentry-data:/var/lib/sentry/files'
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: ${SENTRY_POSTGRES_HOST}
      SENTRY_POSTGRES_PORT: ${SENTRY_POSTGRES_PORT}
      SENTRY_DB_USER: ${SENTRY_DB_USER}
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD}
      SENTRY_DB_NAME: ${SENTRY_DB_NAME}
      SENTRY_REDIS_HOST: ${SENTRY_REDIS_HOST}
      SENTRY_REDIS_PORT: ${SENTRY_REDIS_PORT}
      SENTRY_MAIL_HOST: ${SENTRY_MAIL_HOST}
      SENTRY_SINGLE_ORGANIZATION: ${SENTRY_SINGLE_ORGANIZATION}
      SENTRY_FEATURES: ${SENTRY_FEATURES}
    networks:
      - es-network

volumes:
  redis-sentry-data:
  postgres-sentry-data:
  sentry-data:

networks:
  es-network:
    external: true
